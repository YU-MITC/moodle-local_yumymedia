{"version":3,"file":"webcamuploader.min.js","sources":["../src/webcamuploader.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * YU Kaltura \"My Media\" script for webcam uploader.\n *\n * @copyright (C) 2016-2025 Yamaguchi University (gh-cc@mlex.cc.yamaguchi-u.ac.jp)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module local_yumymedia/webcamuploader\n */\n\ndefine(['jquery'], function($) {\n\n    return {\n        /**\n         * Initial function.\n         * @access public\n         */\n        init: function() {\n\n            var modalX = 0;\n            var modalY = 0;\n\n            var fileSize = 0;\n            var sizeResult = false;\n            var fileType = \"\";\n\n            var defaultWidth = 400;\n            var defaultHeight = 300;\n\n            var localStream = null;\n            var videoBlob = null;\n            var videoFilename = \"\";\n            var blobUrl = null;\n            var recorder = null;\n            var constraints = null;\n\n            var createObjectURL = window.URL && window.URL.createObjectURL\n                    ? function(file) {\n                        return window.URL.createObjectURL(file);\n                    }\n                    : window.webkitURL && window.webkitURL.createObjectURL\n                        ? function(file) {\n                            return window.webkitURL.createObjectURL(file);\n                        }\n                        : undefined;\n\n            var revokeObjectURL = window.URL && window.URL.revokeObjectURL\n                    ? function(file) {\n                        return window.URL.revokeObjectURL(file);\n                    }\n                    : window.webkitURL && window.webkitURL.revokeObjectURL\n                        ? function(file) {\n                            return window.webkitURL.revokeObjectURL(file);\n                        }\n                        : undefined;\n\n            var MEDIA_TYPE = {\n                VIDEO: 1,\n                IMAGE: 2,\n                AUDIO: 5\n            };\n\n            var AUTO_FINALIZE = {\n                TRUE: 1,\n                FALSE: 0,\n                NULL: -1\n            };\n\n            var ENTRY_STATUS = {\n                ENTRY_IMPORTING: -2,\n                ENTRY_CONVERTING: -1,\n                ENTRY_IMPORT: 0,\n                ENTRY_PRECONVERT: 1,\n                ENTRY_READY: 2,\n                ENTRY_DELETED: 3,\n                ENTRY_PENDING: 4,\n                ENTRY_MODERATE: 5,\n                ENTRY_BLOCKED: 6,\n                ENTRY_NO_CONTENT: 7\n            };\n\n            var UPLOAD_TOKEN_STATUS = {\n                PENDING: 0,\n                PARTIAL_UPLOAD: 1,\n                FULL_UPLOAD: 2,\n                CLOSED: 3,\n                TIMED_OUT: 4,\n                DELETED: 5\n            };\n\n            /**\n             * This function retrieve whether web browser is the Internet Explorer.\n             * @access public\n             * @return {bool} - true if web browser is the IE, otherwise false.\n             */\n            function isIE() {\n                var ua = navigator.userAgent.toLowerCase();\n                var ver = navigator.appVersion.toLowerCase();\n\n                // Case of IE(not 11).\n                var isMsIE = (ua.indexOf('msie') > -1) && (ua.indexOf('opera') == -1);\n                // Case of IE6.\n                var isIE6 = isMsIE && (ver.indexOf('msie 6.') > -1);\n                // Case of IE7.\n                var isIE7 = isMsIE && (ver.indexOf('msie 7.') > -1);\n                // Cae of IE8.\n                var isIE8 = isMsIE && (ver.indexOf('msie 8.') > -1);\n                // Case of IE9.\n                var isIE9 = isMsIE && (ver.indexOf('msie 9.') > -1);\n                // Case of IE10.\n                var isIE10 = isMsIE && (ver.indexOf('msie 10.') > -1);\n                // Case of IE11.\n                var isIE11 = (ua.indexOf('trident/7') > -1);\n\n                return isMsIE || isIE6 || isIE7 || isIE8 || isIE9 || isIE10 || isIE11;\n            }\n\n            /**\n             * This function retrieve whether we browser is the Edge.\n             * @access public\n             * @return {bool} - true if web browser is the Edge, otherwise false.\n             */\n            function isEdge() {\n                var ua = navigator.userAgent.toLowerCase();\n\n                // Case of Edge.\n                var isMsEdge = (ua.indexOf('edge') > -1);\n                // Case of Google Chrome.\n                var isChrome = (ua.indexOf('chrome') > -1) && (ua.indexOf('edge') == -1);\n                // Case of Moziila Firefox.\n                var isFirefox = (ua.indexOf('firefox') > -1);\n                // Case of Safari.\n                var isSafari = (ua.indexOf('safari') > -1) && (ua.indexOf('chrome') == -1);\n                // Case of Opera.\n                var isOpera = (ua.indexOf('opera') > -1);\n\n                return isMsEdge === true && isChrome === false && isFirefox === false && isSafari === false && isOpera === false;\n            }\n\n            /**\n             * This function retrieve whether web browser is unsupported.\n             * @access public\n             * @return {bool} - true if web browser is unsupported, otherwise false.\n             */\n            function checkUnsupportedBrowser() {\n                if (isIE() || isEdge()) {\n                    var browser = \"\";\n                    if (isIE()) {\n                        browser = \"Internet Explorer\";\n                    } else {\n                        browser = \"Edge\";\n                    }\n\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('unsupported_browser', 'local_yumymedia', browser);\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n\n                    return true;\n                }\n                return false;\n            }\n\n            /**\n             * This function retrieve os type.\n             * @return {string} - os type.\n             */\n            function getOperatingSystem() {\n                var os;\n                var ua = navigator.userAgent;\n\n                if (ua.match(/iPhone|iPad|iPod/)) {\n                    os = \"iOS\";\n                } else if (ua.match(/Android|android/)) {\n                    os = \"Android\";\n                } else if (ua.match(/Linux|linux/)) {\n                    os = \"Linux\";\n                } else if (ua.match(/Win(dows)/)) {\n                    os = \"Windows\";\n                } else if (ua.match(/Mac|PPC/)) {\n                    os = \"Mac OS\";\n                } else if (ua.match(/CrOS/)) {\n                    os = \"Chrome OS\";\n                } else {\n                    os = \"Other\";\n                }\n\n                return os;\n            }\n\n            /**\n             * This function retrieve whether os is unsupported.\n             * @access public\n             * @return {bool} - true if os is unsupported, otherwise false.\n             */\n            function checkUnsupportedOS() {\n                var os = getOperatingSystem();\n\n                if (os == \"iOS\" || os == \"Android\") {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('unsupported_os', 'local_yumymedia', os);\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n\n                    return true;\n                }\n                return false;\n            }\n\n            /**\n             * This function checks scheme of URL.\n             * @return {bool} - If scheme is https, returns true. Otherwise, returns false.\n             */\n            function isHttps() {\n                var str = window.location.protocol;\n                if (str.indexOf('https') != -1) {\n                    return true;\n                }\n                return false;\n            }\n\n            /**\n             * This function print initial error message.\n             * @access public\n             * @param {string} errorMessage - error message.\n             */\n            function printInitialErrorMessage(errorMessage) {\n                require(['core/str'], function(str) {\n                    var message = str.get_string('back_label', 'local_yumymedia', null);\n                    $.when(message).done(function(localizedString) {\n                        var str = \"\";\n                        str = \"<p><font color=\\\"red\\\">\" + errorMessage + \"</font></p>\";\n                        str = str + \"<br><input type=button id=\\\"backToMymedia\\\" name=\\\"backToMymedia\\\" value=\\\"\";\n                        str = str + localizedString + \"\\\" />\";\n                        $(\"#upload_info\").html(str);\n\n                        $(\"#backToMymedia\").on(\"click\", function() {\n                            handleCancelClick();\n                        });\n                    });\n                });\n            }\n\n            /**\n             * This function print a video player for playing.\n             * @access public\n             * @param {string} url - url of media.\n             */\n            function setPlayingPlayer(url) {\n                var str = \"<video id=\\\"webcam\\\" width=\\\"\" + defaultWidth + \"\\\" height=\\\"\" + defaultHeight + \"\\\" \";\n                str = str + \"autoplay=\\\"false\\\" oncontextmenu=\\\"return false;\\\" controls></video>\";\n                $(\"#videospan\").html(str);\n                document.getElementById(\"webcam\").src = url;\n                document.getElementById(\"webcam\").pause();\n                document.getElementById(\"webcam\").currentTime = 0;\n            }\n\n            /**\n             * This function print a video player for preview.\n             * @access public\n             * @param {string} url - url of media.\n             */\n            function setPreviewPlayer(url) {\n                var str = \"<video id=\\\"webcam\\\" width=\\\"\" + defaultWidth + \"\\\" height=\\\"\" + defaultHeight + \"\\\" \";\n                str = str + \"autoplay=\\\"0\\\" muted oncontextmenu=\\\"return false;\\\"></video>\";\n                $(\"#videospan\").html(str);\n                $(\"#webcam\").attr(\"src\", url);\n            }\n\n            /**\n             * This function start video recording by webcamera.\n             * @access public\n             */\n            function startRecording() {\n                $(\"#recstop\").attr(\"src\", $(\"#stopurl\").val());\n                $(\"#recstop\").off(\"click\");\n\n                $(\"#recstop\").on(\"click\", function() {\n                    stopRecording();\n                });\n\n                $(\"#leftspan\").css(\"display\", \"inline\");\n                $(\"#webcam\").volume = 0.0;\n                recorder.start();\n\n                require(['core/str'], function(str) {\n                    var message = str.get_string('now_recording', 'local_yumymedia', null);\n                    $.when(message).done(function(localizedString) {\n                        $(\"#status\").html(\"<font color=\\\"red\\\">\" + localizedString + \"</font>\");\n                    });\n                });\n            }\n\n            /**\n             * This function stop video recording.\n             * @access public\n             */\n            function stopRecording() {\n                recorder.ondataavailable = function(evt) {\n                    videoBlob = new Blob([evt.data], {type: evt.data.type});\n                    if (window.URL && window.URL.createObjectURL) {\n                        blobUrl = window.URL.createObjectURL(videoBlob);\n                    } else {\n                        blobUrl = window.webkitURL.createObjectURL(videoBlob);\n                    }\n                    setPlayingPlayer(blobUrl);\n                    fileSize = videoBlob.size;\n                    var sizeStr = \"\";\n                    var dividedSize = 0;\n\n                    if (fileSize > 1024 * 1024 * 1024) { // When file size exceeds 1GB.\n                        dividedSize = fileSize / (1024 * 1024 * 1024);\n                        sizeStr = dividedSize.toFixed(2) + \" G\";\n                    } else if (fileSize > 1024 * 1024) { // When file size exceeds 1MB.\n                        dividedSize = fileSize / (1024 * 1024);\n                        sizeStr = dividedSize.toFixed(2) + \" M\";\n                    } else if (fileSize > 1024) { // When file size exceeds 1kB.\n                        dividedSize = fileSize / 1024;\n                        sizeStr = dividedSize.toFixed(2) + \" k\";\n                    } else { // When file size under 1kB.\n                        sizeStr = fileSize + \" \";\n                    }\n\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('video_preview', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            localizedString = \"<font color=\\\"green\\\">\" + localizedString + \"(\" + videoBlob.type + \", \";\n                            localizedString = localizedString + sizeStr + \"B).</font>\";\n                            $(\"#status\").html(localizedString);\n                        });\n                    });\n\n                    fileType = checkFileType(videoBlob.type);\n                    sizeResult = checkFileSize();\n                    if (sizeResult === false) {\n                        require(['core/str'], function(str) {\n                            var message = str.get_string('wrong_filesize', 'local_yumymedia', null);\n                            $.when(message).done(function(localizedString) {\n                                window.alert(localizedString);\n                            });\n                        });\n                    }\n\n                    checkForm();\n                    videoFilename = $(\"#filename\").val() + \".\" + getFileExtension(videoBlob.type);\n                };\n\n                if (localStream.getTracks !== undefined && localStream.getTracks !== null) {\n                    var tracks = localStream.getTracks();\n                    for (var i = tracks.length - 1; i >= 0; --i) {\n                        tracks[i].stop();\n                    }\n                    if (document.getElementById(\"webcam\").srcObject !== undefined) {\n                        document.getElementById(\"webcam\").srcObject = null;\n                    }\n                }\n\n                recorder.stop();\n\n                $(\"#leftspan\").css(\"display\", \"none\");\n                $(\"#rightspan\").css(\"display\", \"inline\");\n\n                $(\"#remove\").on(\"click\", function() {\n                    removeVideo();\n                });\n            }\n\n            /**\n             * This function remove recorded video.\n             * @access public\n             */\n            function removeVideo() {\n                if (!isHttps()) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('require_https', 'local_yumymedia');\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n                    return;\n                }\n\n                // Print error message and return true if web browser is unsupported.\n                if (checkUnsupportedBrowser() || checkUnsupportedOS()) {\n                    return;\n                }\n\n                navigator.mediaDevices = navigator.mediaDevices || ((navigator.mozGetUserMedia || navigator.webkitGetUserMedia) ? {\n                    getUserMedia: function(c) {\n                        return function(y, n) {\n                            (navigator.mozGetUserMedia || navigator.webkitGetUserMedia).call(navigator, c, y, n);\n                        };\n                    }\n                } : null);\n\n                try {\n                    if (navigator.mediaDevices === null || navigator.mediaDevices === undefined ||\n                        MediaRecorder === null || MediaRecorder === undefined) {\n                        require(['core/str'], function(str) {\n                            var message = str.get_string('disable_webrtc', 'local_yumymedia', null);\n                            $.when(message).done(function(localizedString) {\n                                printInitialErrorMessage(localizedString);\n                            });\n                        });\n                        return;\n                    }\n\n                    if (createObjectURL === null || createObjectURL === undefined ||\n                        revokeObjectURL === null || revokeObjectURL === undefined) {\n                        require(['core/str'], function(str) {\n                            var message = str.get_string('disable_objecturl', 'local_yumymedia', null);\n                            $.when(message).done(function(localizedString) {\n                                printInitialErrorMessage(localizedString);\n                            });\n                        });\n                        return;\n                    }\n                } catch (err) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('disable_webrtc', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n                    window.console.log(err);\n                    return;\n                }\n\n                setPreviewPlayer(null);\n\n                if (blobUrl !== null) {\n                    if (window.URL && window.URL.revokeObjectURL) {\n                        window.URL.revokeObjectURL(blobUrl);\n                    } else {\n                        window.webkitURL.revokeObjectURL(blobUrl);\n                    }\n                    blobUrl = null;\n                    videoBlob = null;\n                }\n\n                if (localStream !== null) {\n                    if (localStream.getTracks !== undefined || localStream.getTracks !== null) {\n                        var tracks = localStream.getTracks();\n                        for (var i = tracks.length - 1; i >= 0; --i) {\n                            tracks[i].stop();\n                        }\n                        if (document.getElementById(\"webcam\").srcObject) {\n                            document.getElementById(\"webcam\").srcObject = null;\n                        }\n\n                    } else {\n                        localStream.stop();\n                    }\n                }\n\n                fileSize = 0;\n                sizeResult = false;\n                fileType = \"\";\n\n                $(\"#recstop\").off(\"click\");\n                $(\"#remove\").off(\"click\");\n                $(\"#webcam\").off(\"ondataavailable\");\n\n                var mimeOption = \"\";\n\n                var WebcamRecorder = MediaSource || MediaRecorder;\n\n                // Selection of video codec.\n                if (WebcamRecorder.isTypeSupported(\"video/webm\")) {\n                    mimeOption = \"video/webm\";\n                } else if (WebcamRecorder.isTypeSupported(\"video/mp4\")) {\n                    mimeOption = \"video/mp4\";\n                } else if (WebcamRecorder.isTypeSupported(\"video/webm;codecs=vp8,opus\")) {\n                    mimeOption = \"video/webm; codecs=vp8,opus\";\n                } else if (WebcamRecorder.isTypeSupported(\"video/webm;codecs=vp9,opus\")) {\n                    mimeOption = \"video/webm; codecs=vp9,opus\";\n                } else if (WebcamRecorder.isTypeSupported(\"video/webm;codecs=vp8\")) {\n                    mimeOption = \"video/webm; codecs=vp8\";\n                } else {\n                    mimeOption = \"video/webm; codecs=vp9\";\n                }\n\n                // Prefer camera resolution nearest to 1280x720.\n                constraints = {\n                    audioBitsPerSecond: 128000,\n                    videoBitsPerSecond: 1500000,\n                    mimeType: mimeOption,\n                    audio: {\n                        echoCancellation: false\n                    },\n                    video: {\n                        \"mandatory\": {\n                            minWidth: 320,\n                            minHeight: 240,\n                            maxWidth: 1280,\n                            maxHeight: 720,\n                            minFrameRate: 5,\n                            maxFrameRate: 15\n                        },\n                        \"optional\": [{\"facingMode\": \"user\"}]\n                    }\n                };\n\n                var p = navigator.mediaDevices.getUserMedia(constraints);\n\n                p.then(function(stream) {\n                    localStream = stream;\n                    var video = document.getElementById(\"webcam\");\n                    if (video.srcObject !== undefined) {\n                        video.srcObject = localStream;\n                        video.play();\n                    } else {\n                        if (window.URL && window.URL.createObjectURL) {\n                            blobUrl = window.URL.createObjectURL(blobUrl);\n                        } else {\n                            blobUrl = window.webkitURL.createObjectURL(blobUrl);\n                        }\n                        $(\"#webcam\").attr(\"src\", blobUrl);\n                    }\n\n                    if (MediaSource !== null || MediaSource !== undefined) {\n                        recorder = new MediaRecorder(localStream);\n                    } else {\n                        recorder = new MediaRecorder(localStream, constraints);\n                    }\n\n                    $(\"#recstop\").attr(\"src\", $(\"#recurl\").val());\n                    $(\"#recstop\").on(\"click\", function() {\n                        startRecording(localStream);\n                    });\n                    $(\"#leftspan\").css(\"display\", \"inline\");\n                    $(\"#rightspan\").css(\"display\", \"none\");\n\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('camera_preview', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            $(\"#status\").html(localizedString);\n                        });\n                    });\n\n                    return 0;\n                })\n                .catch(function(err) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('unsupported_camera', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            printInitialErrorMessage(localizedString);\n                        });\n                    });\n                    window.console.log(err);\n                    return;\n                });\n\n                checkForm();\n            }\n\n            /**\n             * This function centerizes a modal window.\n             * @access public\n             */\n            function centeringModalSyncer() {\n\n                // Get width and height of window.\n                var w = $(window).width();\n                var h = $(window).height();\n\n                // Get width and height of modal_content.\n                var cw = $(\"#modal_content\").outerWidth();\n                var ch = $(\"#modal_content\").outerHeight();\n\n                // Execute centerize.\n                $(\"#modal_content\").css({\"left\": ((w - cw) / 2) + \"px\", \"top\": ((h - ch) / 2) + \"px\"});\n            }\n\n            /**\n             * This function checks file size.\n             * @access public\n             * @return {bool} - The file can upload?\n             */\n            function checkFileSize() {\n                var maximumDataSizeStr = $(\"#maximumDataSize\").val();\n                var maximumDataSize = parseInt(maximumDataSizeStr, 10);\n\n                if (fileSize <= 0) {\n                    return false;\n                }\n                if (fileSize > maximumDataSize) {\n                    return false;\n                }\n                return true;\n            }\n\n            /**\n             * This function checks file type.\n             * @access public\n             * @param {string} fileType - file type of selected media.\n             * @return {string} - media type string for kaltura server.\n             */\n            function checkFileType(fileType) {\n                if (fileType.indexOf(\"video/avi\") != -1 || fileType.indexOf(\"video/x-msvideo\") != -1 ||\n                    fileType.indexOf(\"video/mpeg\") != -1 || fileType.indexOf(\"video/mpg\") != -1 ||\n                    fileType.indexOf(\"video/mp4\") != -1 || fileType.indexOf(\"video/ogg\") ||\n                    fileType.indexOf(\"video/quicktime\") != -1 || fileType.indexOf(\"video/VP8\") != -1 ||\n                    fileType.indexOf(\"video/x-flv\") != -1 || fileType.indexOf(\"video/x-f4v\") != -1 ||\n                    fileType.indexOf(\"video/x-matroska\") != -1 ||\n                    fileType.indexOf(\"video/x-ms-wmv\") != -1 || fileType.indexOf(\"video/webm\") != -1) {\n                    return \"video\";\n                }\n\n                if (fileType.indexOf(\"audio/ac3\") != -1 || fileType.indexOf(\"audio/ogg\") != -1 ||\n                    fileType.indexOf(\"audio/mpeg\") != -1 || fileType.indexOf(\"audio/mp4\") != -1 ||\n                    fileType.indexOf(\"audio/mp3\") != -1 ||\n                    fileType.indexOf(\"audio/wav\") != -1 || fileType.indexOf(\"audio/x-ms-wma\") != -1) {\n                    return \"audio\";\n                }\n\n                if (fileType.indexOf(\"image/gif\") != -1 || fileType.indexOf(\"image/jpeg\") != -1 ||\n                    fileType.indexOf(\"image/png\") != -1 || fileType.indexOf(\"image/tiff\") != -1) {\n                    return \"image\";\n                }\n\n                return \"N/A\";\n            }\n\n            /**\n             * This function return file extension string.\n             * @access public\n             * @param {string} fileType - file type of selected media.\n             * @return {string} - file extension of selected media.\n             */\n            function getFileExtension(fileType) {\n                if (fileType.indexOf(\"video/avi\") != -1 || fileType.indexOf(\"video/x-msvideo\") != -1) {\n                    return \"avi\";\n                }\n                if (fileType.indexOf(\"video/mpeg\") != -1 || fileType.indexOf(\"video/mpg\") != -1 ||\n                    fileType.indexOf(\"audio/mpeg\") != -1 || fileType.indexOf(\"audio/mpg\") != -1) {\n                    return \"mpeg\";\n                }\n                if (fileType.indexOf(\"video/mp4\") != -1 || fileType.indexOf(\"video/m4v\") != -1 ||\n                    fileType.indexOf(\"audio/mp4\") != -1) {\n                    return \"mp4\";\n                }\n                if (fileType.indexOf(\"video/ogg\") != -1) {\n                    return \"ogg\";\n                }\n                if (fileType.indexOf(\"video/quicktime\") != -1) {\n                    return \"mov\";\n                }\n                if (fileType.indexOf(\"video/VP8\") != -1 || fileType.indexOf(\"video/VP9\") != -1 ||\n                    fileType.indexOf(\"video/vp8\") != -1 || fileType.indexOf(\"video/vp9\") != -1 ||\n                    fileType.indexOf(\"video/webm\") != -1) {\n                    return \"webm\";\n                }\n                if (fileType.indexOf(\"video/x-flv\") != -1 || fileType.indexOf(\"video/x-f4v\") != -1) {\n                    return \"flv\";\n                }\n                if (fileType.indexOf(\"video/x-matroska\") != -1) {\n                    return \"mkv\";\n                }\n                if (fileType.indexOf(\"video/x-ms-wmv\") != -1) {\n                    return \"wmv\";\n                }\n\n                if (fileType.indexOf(\"audio/ac3\") != -1) {\n                    return \"ac3\";\n                }\n                if (fileType.indexOf(\"audio/ogg\") != -1) {\n                    return \"ogg\";\n                }\n                if (fileType.indexOf(\"audio/wav\") != -1) {\n                    return \"wav\";\n                }\n                if (fileType.indexOf(\"audio/x-ms-wma\") != -1) {\n                    return \"wma\";\n                }\n\n                if (fileType.indexOf(\"image/gif\") != -1) {\n                    return \"gif\";\n                }\n                if (fileType.indexOf(\"image/jpeg\") != -1) {\n                    return \"jpg\";\n                }\n                if (fileType.indexOf(\"image/png\") != -1) {\n                    return \"png\";\n                }\n                if (fileType.indexOf(\"image/tiff\") != -1) {\n                    return \"tiff\";\n                }\n\n                return \"webm\";\n            }\n\n            /**\n             * This function checks metadata.\n             * @access public\n             */\n            function checkForm() {\n                if (blobUrl === null ||\n                    videoBlob === null ||\n                    videoBlob.size === 0 ||\n                    sizeResult === false ||\n                    $(\"#name\").val() === \"\" ||\n                    $(\"#tags\").val() === \"\" ||\n                    fileType === \"\" ||\n                    fileType === \"N/A\") {\n                    // Dsiable upload button.\n                    $(\"#entry_submit\").prop(\"disabled\", true);\n                    $(\"#entry\").val(\"\");\n                } else {\n                    // Enable upload button.\n                    $(\"#entry_submit\").prop(\"disabled\", false);\n                }\n            }\n\n            /**\n             * This function is callback for cancel button.\n             * @access public\n             */\n            function handleCancelClick() {\n                location.href = \"./yumymedia.php\";\n            }\n\n            /**\n             * This function prints modal window.\n             * @access public\n             * @return {boole} - If modal window open, return true. Otherwise, return false.\n             */\n            function fadeInModalWindow() {\n                // Window Unfocus for avoid duplication.\n                $(this).blur();\n                if ($(\"#modal_window\")[0]) {\n                    return false;\n                }\n\n                // Records scroll position of window.\n                var dElm = document.documentElement;\n                var dBody = document.body;\n                modalX = dElm.scrollLeft || dBody.scrollLeft; // X position.\n                modalY = dElm.scrollTop || dBody.scrollTop; // Y position.\n                // Print overlay.\n                $(\"body\").append(\"<div id=\\\"modal_window\\\"></div>\");\n                $(\"#modal_window\").fadeIn(\"slow\");\n\n                // Execure centerrize.\n                centeringModalSyncer();\n                // Fade-in modal window.\n                $(\"#modal_content\").fadeIn(\"slow\");\n\n                return true;\n            }\n\n            /**\n             * This function deletes a modal window.\n             * @access public\n             */\n            function fadeOutModalWindow() {\n                // Rescore scroll position of window.\n                window.scrollTo(modalX, modalY);\n                // Fade-out [#modal_content] and [#modal_window].\n                $(\"#modal_content,#modal_window\").fadeOut(\"slow\", function() {\n                    // Delete [#modal_window].\n                    $(\"#modal_window\").remove();\n                    $(\"#modal_content\").remove();\n                });\n            }\n\n            /**\n             * This function adds back button.\n             * @access public\n             */\n            function addBackButton() {\n                require(['core/str'], function(str) {\n                    var message = str.get_string('back_label', 'local_yumymedia', null);\n                    $.when(message).done(function(localizedString) {\n                        var contentHtml = \"<br><input type=button id=\\\"backToMymedia\\\" name=\\\"backToMymedia\\\" value=\\\"\";\n                        contentHtml += localizedString + \"\\\" />\";\n                        $(\"#modal_content\").append(contentHtml);\n\n                        $(\"#backToMymedia\").on(\"click\", function() {\n                            handleCancelClick();\n                        });\n                    });\n                });\n            }\n\n            /**\n             * This function prints error message.\n             * @access public\n             * @param {string} errorMessage - string of error message.\n             */\n            function printErrorMessage(errorMessage) {\n                $(\"#modal_content\").append(\"<font color=\\\"red\\\">\" + errorMessage + \"</font><br>\");\n                addBackButton();\n            }\n\n            /**\n             * This function prints success message.\n             * @access public\n             * @param {string} id - id of media entry.\n             * @param {string} name - name of media entry.\n             * @param {string} tags - tags of media entry.\n             * @param {string} description - description of media entry.\n             * @param {string} creatorId - username of creator.\n             */\n            function printSuccessMessage(id, name, tags, description, creatorId) {\n\n                require(['core/str', 'core/notification'], function(str, notification) {\n                    var strings = [\n                        {key: 'upload_success', component: 'local_yumymedia'},\n                        {key: 'entryid_header', component: 'local_yumymedia'},\n                        {key: 'name_header', component: 'local_yumymedia'},\n                        {key: 'tags_header', component: 'local_yumymedia'},\n                        {key: 'desc_header', component: 'local_yumymedia'},\n                        {key: 'creatorid_header', component: 'local_yumymedia'},\n                        {key: 'back_label', component: 'local_yumymedia'}\n                    ];\n                    str.get_strings(strings).then(function(results) {\n                        // Delete modal window.\n                        fadeOutModalWindow();\n\n                        var output = '<h3>' + results[0] + '</h3>';\n                        output += \"<table border=\\\"2\\\" cellpadding=\\\"5\\\">\";\n                        output += \"<tr><td>\" + results[1] + \"</td><td>\" + id + \"</td></tr>\";\n                        output += \"<tr><td>\" + results[2] + \"</td><td>\" + name + \"</td></tr>\";\n                        output += \"<tr><td>\" + results[3] + \"</td><td>\" + tags + \"</td></tr>\";\n                        output += \"<tr><td>\" + results[4] + \"</td><td>\" + description + \"</td></tr>\";\n                        output += \"<tr><td>\" + results[5] + \"</td><td>\" + creatorId + \"</td></tr>\";\n                        output += \"</table>\";\n                        output += \"<br>\";\n                        output += \"<input type=button id=\\\"backToMymedia\\\" name=\\\"backToMymedia\\\" value=\\\"\";\n                        output += results[6] + \"\\\" />\";\n                        $(\"#upload_info\").html(output);\n\n                        $(\"#backToMymedia\").on(\"click\", function() {\n                            handleCancelClick();\n                        });\n                        return 0;\n                    }).fail(notification.exception);\n                });\n            }\n\n            /**\n             * This function is callback for reset button.\n             * @access public\n             */\n            function handleResetClick() {\n                $(\"#file_info\").html(\"\");\n                $(\"#type\").val(\"\");\n            }\n\n            /**\n             * This function checks name of media.\n             * @access public\n             * @param {string} str - name of media.\n             * @return {bool} - if name is appropriate, return \"true\". Otherwise, return \"false\".\n             */\n            function checkNameString(str) {\n                var regex = /[\"$%&'~^\\\\`/]/;\n                if (regex.test(str) === true) {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n\n            /**\n             * This function checks tags of media.\n             * @access public\n             * @param {string} str - tagas of media.\n             * @return {bool} - if tags are appropriate, return \"true\". Otherwise, return \"false\".\n             */\n            function checkTagsString(str) {\n                var regex = /[!\"#$%&'~|^\\\\@`()[\\]{}:;+*/=<>?]/;\n                if (regex.test(str) === true) {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n\n            /**\n             * This function checks metadata of media.\n             * @access public\n             * @return {bool} - if metadata is appropriate, return \"true\". Otherwise, return \"false\".\n             */\n            function checkMetadata() {\n                var nameStr = $(\"#name\").val();\n                var tagsStr = $(\"#tags\").val();\n                var descStr = $(\"#description\").val();\n\n                var flag = true;\n\n                if (checkNameString(nameStr) === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_name', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    flag = false;\n                }\n\n                if (checkTagsString(tagsStr) === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_tags', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    flag = false;\n                }\n\n                if (checkNameString(descStr) === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_desc', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    flag = false;\n                }\n\n                return flag;\n            }\n\n            /**\n             * This function is callback for submit button.\n             * @access public\n             * @return {bool} - if file is uploaded, return true. Otherwise, return false.\n             */\n            function handleSubmitClick() {\n\n                if (checkMetadata() === false) {\n                    return false;\n                }\n\n                if (checkFileSize() === false) {\n                    require(['core/str'], function(str) {\n                        var message = str.get_string('wrong_filesize', 'local_yumymedia', null);\n                        $.when(message).done(function(localizedString) {\n                            window.alert(localizedString);\n                        });\n                    });\n                    return false;\n                }\n\n                fadeInModalWindow(); // Prints modal window.\n                executeUploadProcess(); // Executes upload.\n\n                return true;\n            }\n\n            /**\n             * This function executes upload process.\n             * @access public\n             */\n            function executeUploadProcess() {\n                var serverHost = $(\"#kalturahost\").val(); // Get hostname of kaltura server.\n                var ks = $(\"#ks\").val(); // Get session id.\n                // Create upload token.\n                createUploadToken(serverHost, ks);\n            }\n\n            /**\n             * This function deletes upload token.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             * @param {string} uploadTokenId - token id for uploading.\n             * @return {bool} if upload token is deleted, return true.\n             */\n            function deleteUploadToken(serverHost, ks, uploadTokenId) {\n                var fd = new FormData();\n                var flag;\n\n                // Set form data.\n                fd.append(\"action\", \"delete\");\n                fd.append(\"ks\", ks);\n                fd.append(\"uploadTokenId\", uploadTokenId);\n\n                // Set transmission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    async: true,\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/uploadToken/action/delete\";\n\n                // Transmits a data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // When response is not XML.\n                    if (xmlData === null) {\n                        flag = false;\n                    }\n                    flag = true;\n                })\n                .fail(function(xmlData) {\n                    flag = false;\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                });\n\n                return flag;\n            }\n\n            /**\n             * This function creates upload token.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             */\n            function createUploadToken(serverHost, ks) {\n                var uploadTokenId;\n                var findData;\n\n                var postData = {\n                    type: \"GET\",\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/uploadToken/action/add?ks=\" + ks;\n                serviceURL = serviceURL + \"&uploadToken:objectType=KalturaUploadToken\";\n                serviceURL = serviceURL + \"uploadToken:fileName=\" + encodeURI(videoFilename);\n                serviceURL = serviceURL + \"&uploadToken:fileSize=\" + videoBlob.size;\n                serviceURL = serviceURL + \"&uploadToken:autoFinalize=\" + AUTO_FINALIZE.NULL;\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null) {\n                        printErrorMessage(\"Cannot create upload token !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists error code.\n                    if (findData !== null && typeof findData !== \"undefined\" && findData.text() !== \"\") {\n                        printErrorMessage(\"Cannot create upload token !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists upload token id.\n                    if (findData === null || typeof findData === \"undefined\" || findData.text() === \"\") {\n                        printErrorMessage(\"Cannot create upload token !<br>(Cannot get status of upload token.)\");\n                        return;\n                    }\n\n                    var uploadTokenStatus = findData.text();\n                    if (uploadTokenStatus != UPLOAD_TOKEN_STATUS.PENDING) {\n                        printErrorMessage(\"Cannot create upload token !<br>(UPLOAD_TOKEN_STATUS : \" + uploadTokenStatus + \")\");\n                        return;\n                    }\n\n                    // Get upload token id.\n                    findData = $(xmlData).find(\"id\");\n                    // There not exists upload token id.\n                    if (findData === null || typeof findData === \"undefined\" || findData.text() === \"\") {\n                        printErrorMessage(\"Cannot create uplaod token !<br>(Cannot get an uploadTokenId.)\");\n                        return;\n                    }\n                    uploadTokenId = findData.text();\n                    // Entry metadata.\n                    setTimeout(function() {\n                        createMediaEntry(serverHost, ks, uploadTokenId);\n                    }, 1000);\n\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    printErrorMessage(\"Cannot create upload token !<br>(Cannot connect to kaltura server.)\");\n                });\n            }\n\n            /**\n             * This function creates media entry.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connecion;\n             * @param {string} uploadTokenId - upload token id.\n             */\n            function createMediaEntry(serverHost, ks, uploadTokenId) {\n                var findData;\n                var entryStatus;\n                var entryId = \"\";\n                var entryName = \"\";\n                var entryTags = \"\";\n                var entryDescription = \"\";\n                var entryCreatorId = \"\";\n\n                var nameStr = $(\"#name\").val();\n                var tagsStr = $(\"#tags\").val();\n                var descStr = $(\"#description\").val();\n                var controlId = $(\"#controlId\").val();\n                var creatorId = $(\"#creatorId\").val();\n\n                nameStr = nameStr.trim();\n                tagsStr = tagsStr.trim();\n                if (descStr !== null) {\n                    descStr = descStr.trim();\n                }\n\n                var fd = new FormData();\n\n                // Creates form data.\n                fd.append(\"action\", \"add\");\n                fd.append(\"ks\", ks);\n                fd.append(\"entry:objectType\", \"KalturaMediaEntry\");\n                fd.append(\"entry:mediaType\", MEDIA_TYPE.VIDEO);\n                fd.append(\"entry:sourceType\", 1);\n                fd.append(\"entry:name\", nameStr);\n                fd.append(\"entry:tags\", tagsStr);\n                if (descStr !== null && descStr !== \"\") {\n                    fd.append(\"entry:description\", descStr);\n                } else {\n                    fd.append(\"entry:description\", \"\");\n                }\n\n                fd.append(\"entry:categories\", $(\"#categories\").val());\n\n                if (controlId !== null && controlId !== \"\") {\n                    fd.append(\"entry:accessControlId\", controlId);\n                }\n\n                fd.append(\"entry:creatorId\", creatorId);\n                fd.append(\"entry:userId\", creatorId);\n\n                // Creates transmission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/media/action/add\";\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null || typeof xmlData === \"undefined\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entry !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists an error code.\n                    if (findData !== null && typeof findData !== \"undefined\" && findData.text() !== \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entry !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    // Get a tag of status.\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists a tag of status.\n                    if (findData === null || typeof findData === \"undefined\" || findData.text() === \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entyry !<br>(Cannot get a mediaEntryStatus.)\");\n                        return;\n                    }\n\n                    // Get a value of status.\n                    entryStatus = findData.text();\n                    // When uploading of metadata failed.\n                    if (entryStatus != ENTRY_STATUS.ENTRY_NO_CONTENT) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot create media entry!<br>(mediaEntryStatus: \" + entryStatus + \")\");\n                        return;\n                    }\n\n                    // Get a tag of entry id.\n                    findData = $(xmlData).find(\"id\");\n                    // Get a value of entry id.\n                    entryId = findData.text();\n                    // Get a tag of name.\n                    findData = $(xmlData).find(\"name\");\n                    // Get a value of name.\n                    entryName = findData.text();\n                    // Get a tag of tags.\n                    findData = $(xmlData).find(\"tags\");\n                    // Get a value of tags.\n                    entryTags = findData.text();\n                    // Get a tag of description.\n                    findData = $(xmlData).find(\"description\");\n                    // There exists description.\n                    if (findData !== null && typeof findData !== \"undefined\" && findData.text() !== \"\") {\n                        // Get a value of description.\n                        entryDescription = findData.text();\n                    } else {\n                        entryDescription = \"\";\n                    }\n                    // Get a tago of creator id.\n                    findData = $(xmlData).find(\"creatorId\");\n                    // Get a value of creator id.\n                    entryCreatorId = findData.text();\n\n                    if (entryId === null || entryId === \"\" || entryName === null || entryName === \"\" ||\n                        entryTags === null || entryTags === \"\" || entryCreatorId === null || entryCreatorId === \"\" ||\n                        descStr !== \"\" && (entryDescription === null || entryDescription === \"\")) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"There exists wrong information(s) <br>\");\n                        return;\n                    }\n\n                    // Associate uploaded file with media entry.\n                    setTimeout(function() {\n                        uploadMediaFile(serverHost, ks, uploadTokenId, entryId);\n                    }, 1000);\n\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    deleteUploadToken(serverHost, ks, uploadTokenId);\n                    printErrorMessage(\"Cannot create media entry !<br>(Cannot connect to kaltura server.)\");\n                    return;\n                });\n            }\n\n            /**\n             * This function uploads media file.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             * @param {string} uploadTokenId - upload token id.\n             * @param {string} entryId - id of media entry.\n             */\n            function uploadMediaFile(serverHost, ks, uploadTokenId, entryId) {\n                var findData;\n                var fd = new FormData();\n\n                require(['core/str', 'core/notification'], function(str, notification) {\n                    var strings = [\n                        {key: 'recorder_uploading', component: 'local_yumymedia'},\n                        {key: 'progress', component: 'local_yumymedia'},\n                        {key: 'attach_file', component: 'local_yumymedia'}\n                    ];\n                    str.get_strings(strings).then(function(results) {\n                        $(\"#modal_content\").append(results[0] + \"<br>\");\n                        var message = \"<p>\" + results[1];\n                        message = message + \": <span id=\\\"pvalue\\\" style=\\\"color:#00b200\\\">0.00</span> %</p>\";\n                        $(\"#modal_content\").append(message);\n\n                        // Creates form data.\n                        fd.append(\"action\", \"upload\");\n                        fd.append(\"ks\", ks);\n                        fd.append(\"uploadTokenId\", uploadTokenId);\n                        fd.append(\"fileData\", videoBlob, encodeURI(videoFilename), videoBlob.size);\n                        fd.append(\"resume\", false);\n                        fd.append(\"finalChunk\", true);\n                        fd.append(\"resumeAt\", 0);\n\n                        // Creates tnramission data.\n                        var postData = {\n                            type: \"POST\",\n                            data: fd,\n                            cache: false,\n                            async: true,\n                            contentType: false,\n                            scriptCharset: \"utf-8\",\n                            processData: false,\n                            dataType: \"xml\",\n                            xhr: function() {\n                                var XHR = $.ajaxSettings.xhr();\n                                if (XHR.upload) {\n                                    XHR.upload.addEventListener(\"progress\", function(e) {\n                                        if (e.lengthComputable) {\n                                            var newValue = parseInt(e.loaded / e.total * 100);\n                                            $(\"#pvalue\").html(newValue);\n                                        }\n                                    }, false);\n                                }\n                                return XHR;\n                            }\n                        };\n\n                        var serviceURL = serverHost + \"/api_v3/service/uploadToken/action/upload\";\n\n                        // Transmits data.\n                        $.ajax(\n                            serviceURL, postData\n                        )\n                        .done(function(xmlData) {\n                            // Response is not XML.\n                            if (xmlData === null) {\n                                deleteUploadToken(serverHost, ks, uploadTokenId);\n                                printErrorMessage(\"Cannot upload the video !<br>(Cannot get a XML response.)\");\n                                return;\n                            }\n\n                            // Get a tag of error code.\n                            findData = $(xmlData).find(\"code\");\n                            // There exists error code.\n                            if (findData !== null && typeof findData !== \"undefined\" && findData.text() !== \"\") {\n                                deleteUploadToken(serverHost, ks, uploadTokenId);\n                                printErrorMessage(\"Cannot upload the video !<br>(\" + findData.text() + \")\");\n                                return;\n                            }\n\n                            // Get upload token id.\n                            findData = $(xmlData).find(\"status\");\n                            // There not exists upload token id.\n                            if (findData === null || typeof findData === \"undefined\" || findData.text() === \"\") {\n                                deleteUploadToken(serverHost, ks, uploadTokenId);\n                                printErrorMessage(\"Cannot upload the video !<br>(Cannot get an uploadTokenStatus.)\");\n                                return;\n                            }\n\n                            var uploadTokenStatus = findData.text();\n                            if (uploadTokenStatus != UPLOAD_TOKEN_STATUS.FULL_UPLOAD &&\n                                uploadTokenStatus != UPLOAD_TOKEN_STATUS.PARTIAL_UPLOAD) {\n                                deleteUploadToken(serverHost, ks, uploadTokenId);\n                                printErrorMessage(\"Cannot upload the video !<br>(UPLOAD_TOKEN_STATUS : \" + uploadTokenStatus + \")\");\n                                return;\n                            } else {\n                                window.console.log(\"File chunk have been transmitted.\");\n                            }\n\n                            $(\"#modal_content\").append(results[2] + \"<br>\");\n\n                            // Create media entry.\n                            setTimeout(function() {\n                                attachUploadedFile(serverHost, ks, uploadTokenId, entryId);\n                            }, 1000);\n                        })\n                        .fail(function(xmlData) {\n                            if (xmlData !== null) {\n                                window.console.dir(xmlData);\n                            }\n                            deleteUploadToken(serverHost, ks, uploadTokenId);\n                            printErrorMessage(\"Cannot upload the file !<br>(Cannot connect to contents server.)\");\n                            return;\n                        });\n\n                        return 0;\n                    }).fail(notification.exception);\n                });\n            }\n\n            /**\n             * This function uploads metadata.\n             * @access public\n             * @param {string} serverHost - hostname of kaltura server.\n             * @param {string} ks - session string of kaltura connection.\n             * @param {string} uploadTokenId - upload token id.\n             * @param {string} entryId - id of media entry.\n             */\n            function attachUploadedFile(serverHost, ks, uploadTokenId, entryId) {\n                var entryStatus;\n                var entryName = \"\";\n                var entryTags = \"\";\n                var entryDescription = \"\";\n                var entryCreatorId = \"\";\n\n                var findData;\n\n                // Creates form data.\n                var fd = new FormData();\n                fd.append(\"action\", \"addContent\");\n                fd.append(\"ks\", ks);\n                fd.append(\"entryId\", entryId);\n                fd.append(\"resource:objectType\", \"KalturaUploadedFileTokenResource\");\n                fd.append(\"resource:token\", uploadTokenId);\n\n                // Creates transmission data.\n                var postData = {\n                    type: \"POST\",\n                    data: fd,\n                    cache: false,\n                    async: true,\n                    contentType: false,\n                    scriptCharset: \"utf-8\",\n                    processData: false,\n                    dataType: \"xml\"\n                };\n\n                var serviceURL = serverHost + \"/api_v3/service/media/action/addContent\";\n\n                // Transmits data.\n                $.ajax(\n                    serviceURL, postData\n                )\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null || typeof xmlData === \"undefined\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(Cannot get a XML response.)\");\n                        return;\n                    }\n\n                    // Get a tag of error code.\n                    findData = $(xmlData).find(\"code\");\n                    // There exists error code.\n                    if (findData !== null && typeof findData !== \"undefined\" && findData.text() !== \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(\" + findData.text() + \")\");\n                        return;\n                    }\n\n                    // Get a tag of status.\n                    findData = $(xmlData).find(\"status\");\n                    // There not exists a tag of status.\n                    if (findData === null || typeof findData === \"undefined\" || findData.text() === \"\") {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(Cannot get a mediaEntryStatus.)\");\n                        return;\n                    }\n\n                    // Get a value of status.\n                    entryStatus = findData.text();\n                    // When uploading of metadata failed.\n                    if (entryStatus != ENTRY_STATUS.ENTRY_READY && entryStatus != ENTRY_STATUS.ENTRY_PENDING &&\n                        entryStatus != ENTRY_STATUS.ENTRY_PRECONVERT && entryStatus != ENTRY_STATUS.IMPORT &&\n                        entryStatus != ENTRY_STATUS.IMPORTING) {\n                        deleteUploadToken(serverHost, ks, uploadTokenId);\n                        printErrorMessage(\"Cannot attach uploaded file !<br>(mediaEntryStatus: \" + entryStatus + \")\");\n                        return;\n                    }\n\n                    // Get a tag of entry id.\n                    findData = $(xmlData).find(\"id\");\n                    // Get a value of entry id.\n                    entryId = findData.text();\n                    // Get a tag of name.\n                    findData = $(xmlData).find(\"name\");\n                    // Get a value of name.\n                    entryName = findData.text();\n                    // Get a tag of tags.\n                    findData = $(xmlData).find(\"tags\");\n                    // Get a value of tags.\n                    entryTags = findData.text();\n                    // Get a tag of description.\n                    findData = $(xmlData).find(\"description\");\n                    // There exists description.\n                    if (findData !== null && typeof findData !== \"undefined\" && findData.text() !== \"\") {\n                        // Get a value of description.\n                        entryDescription = findData.text();\n                    } else {\n                        entryDescription = \"\";\n                    }\n                    // Get a tago of creator id.\n                    findData = $(xmlData).find(\"creatorId\");\n                    // Get a value of creator id.\n                    entryCreatorId = findData.text();\n\n                    // Prints back button.\n                    addBackButton();\n                    // Prints success message.\n                    printSuccessMessage(entryId, entryName, entryTags, entryDescription, entryCreatorId);\n                })\n                .fail(function(xmlData) {\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                    deleteUploadToken(serverHost, ks, uploadTokenId);\n                    printErrorMessage(\"Cannot attach uploaded file !<br>(Cannot connect to kaltura server.)\");\n                    return;\n                });\n            }\n\n            /**\n             * This function close kaltura session.\n             * @access public\n             */\n            function sessionEnd() {\n                var serverHost = $(\"#kalturahost\").val(); // Get hostname of kaltura server.\n                var serviceURL = serverHost + \"/api_v3/service/session/action/end\";\n\n                // Transmits data.\n                $.ajax({\n                    type: \"GET\",\n                    url: serviceURL,\n                    cache: false\n                })\n                .done(function(xmlData) {\n                    // Response is not XML.\n                    if (xmlData === null) {\n                        window.console.log(\"Cannot delete the uploadToken ! (Cannot get a XML response.)\");\n                    } else {\n                        window.console.log(\"Kaltura Session has been deleted.\");\n                    }\n                })\n                .fail(function(xmlData) {\n                    window.console.log(\"Cannot delete the uploadToken ! (Cannot connect to kaltura server.)\");\n                    if (xmlData !== null) {\n                        window.console.dir(xmlData);\n                    }\n                });\n            }\n\n            // This function execute when window is chagned.\n            $(window).on(\"change\", function() {\n                checkForm();\n            });\n\n            // This function execute when window is loaded.\n            $(window).on(\"load\", function() {\n                $(\"#name\").val(\"\");\n                $(\"#tags\").val(\"\");\n                $(\"#description\").val(\"\");\n            });\n\n            removeVideo();\n\n            // This function execute when window is uloaded.\n            $(window).on(\"unload\", function() {\n                if (blobUrl !== null) {\n                    if (window.URL && window.URL.revokeObjectURL) {\n                        window.URL.revokeObjectURL(blobUrl);\n                    } else {\n                        window.webkitURL.revokeObjectURL(blobUrl);\n                    }\n                    videoBlob = null;\n                    blobUrl = null;\n                }\n\n                if (localStream !== null) {\n                    if (localStream.getTracks) {\n                        var tracks = localStream.getTracks();\n                        for (var i = tracks.length - 1; i >= 0; --i) {\n                            tracks[i].stop();\n                        }\n                    } else {\n                        localStream.stop();\n                    }\n                    if (document.getElementById(\"webcam\").srcObject) {\n                        document.getElementById(\"webcam\").srcObject = null;\n                    }\n                }\n\n                sessionEnd();\n            });\n\n            // This function execute when window is resized.\n            $(window).resize(centeringModalSyncer);\n\n            $(\"#uploader_cancel\").on(\"click\", function() {\n                handleCancelClick();\n            });\n\n            $(\"#name\").on(\"change\", function() {\n                checkForm();\n            });\n\n            $(\"#tags\").on(\"change\", function() {\n                checkForm();\n            });\n\n            $(\"#entry_submit\").on(\"click\", function() {\n                handleSubmitClick();\n            });\n\n            $(\"#entry_reset\").on(\"click\", function() {\n                handleResetClick();\n            });\n        }\n    };\n});\n"],"names":["define","$","init","modalX","modalY","fileSize","sizeResult","fileType","localStream","videoBlob","videoFilename","blobUrl","recorder","constraints","createObjectURL","window","URL","file","webkitURL","undefined","revokeObjectURL","MEDIA_TYPE","AUTO_FINALIZE","ENTRY_STATUS","ENTRY_IMPORTING","ENTRY_CONVERTING","ENTRY_IMPORT","ENTRY_PRECONVERT","ENTRY_READY","ENTRY_DELETED","ENTRY_PENDING","ENTRY_MODERATE","ENTRY_BLOCKED","ENTRY_NO_CONTENT","UPLOAD_TOKEN_STATUS","isIE","ua","navigator","userAgent","toLowerCase","ver","appVersion","isMsIE","indexOf","isIE6","isIE7","isIE8","isIE9","isIE10","isIE11","checkUnsupportedBrowser","isMsEdge","isChrome","isFirefox","isSafari","isOpera","browser","require","str","message","get_string","when","done","localizedString","printInitialErrorMessage","checkUnsupportedOS","os","match","errorMessage","html","on","handleCancelClick","startRecording","attr","val","off","ondataavailable","evt","url","Blob","data","type","document","getElementById","src","pause","currentTime","size","sizeStr","toFixed","checkFileType","checkFileSize","alert","checkForm","getFileExtension","getTracks","tracks","i","length","stop","srcObject","css","removeVideo","stopRecording","volume","start","location","protocol","mediaDevices","mozGetUserMedia","webkitGetUserMedia","getUserMedia","c","y","n","call","MediaRecorder","err","console","log","mimeOption","WebcamRecorder","MediaSource","isTypeSupported","audioBitsPerSecond","videoBitsPerSecond","mimeType","audio","echoCancellation","video","minWidth","minHeight","maxWidth","maxHeight","minFrameRate","maxFrameRate","then","stream","play","catch","centeringModalSyncer","w","width","h","height","cw","outerWidth","ch","outerHeight","maximumDataSizeStr","maximumDataSize","parseInt","prop","href","addBackButton","contentHtml","append","printErrorMessage","printSuccessMessage","id","name","tags","description","creatorId","notification","get_strings","key","component","results","scrollTo","fadeOut","remove","output","fail","exception","checkNameString","test","handleSubmitClick","nameStr","tagsStr","descStr","flag","this","blur","dElm","documentElement","dBody","body","scrollLeft","scrollTop","fadeIn","fadeInModalWindow","serverHost","ks","uploadTokenId","findData","postData","cache","async","contentType","scriptCharset","dataType","serviceURL","encodeURI","ajax","xmlData","find","text","uploadTokenStatus","setTimeout","entryStatus","entryId","entryName","entryTags","entryDescription","entryCreatorId","controlId","trim","fd","FormData","processData","deleteUploadToken","strings","xhr","XHR","ajaxSettings","upload","addEventListener","e","lengthComputable","newValue","loaded","total","IMPORT","IMPORTING","dir","attachUploadedFile","uploadMediaFile","createMediaEntry","createUploadToken","resize"],"mappings":"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"}